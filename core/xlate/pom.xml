<?xml version="1.0"?>
<project
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
  xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.customer.app</groupId>
    <artifactId>core</artifactId>
    <version>1.0</version>
  </parent>

  <artifactId>xlate</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>bundle</packaging>

  <name>XLate</name>

	<properties>
		<activemq.service.name>broker-amq-tcp</activemq.service.name>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		
		<!-- configure the versions you want to use here -->
		<karaf.plugin.version>4.2.0.fuse-000280-redhat-4</karaf.plugin.version>
		
		<!-- <fuse.version>7.0.0.fuse-000191-redhat-1</fuse.version> -->
		<fuse.version>7.2.0.fuse-720020-redhat-00001</fuse.version>
			
		<!-- maven plugin versions -->
		<maven-compiler-plugin.version>3.6.0</maven-compiler-plugin.version>
		<maven-surefire-plugin.version>2.19.1</maven-surefire-plugin.version>
		<maven-bundle-plugin.version>2.3.7</maven-bundle-plugin.version>
		<maven-install-plugin.version>2.5.2</maven-install-plugin.version>
		<fabric8.maven.plugin.version>3.5.33.fuse-000089-redhat-4</fabric8.maven.plugin.version>

		<!-- The following dependencies will be added to Fuse bom in next versions -->
		<arquillian-cube.version>1.9.2</arquillian-cube.version>
	</properties>

	<dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.jboss.redhat-fuse</groupId>
        <artifactId>fuse-karaf-bom</artifactId>
        <version>${fuse.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
  	
  	<!-- Logging -->
  	<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
		</dependency>

		<!-- Camel -->
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-core</artifactId>
		</dependency>
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-jaxb</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-soap</artifactId>
    </dependency>
		<dependency>
			<groupId>org.apache.activemq</groupId>
			<artifactId>activemq-client</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.activemq</groupId>
			<artifactId>activemq-pool</artifactId>
		</dependency>
     	
		<!-- test -->
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-test-spring</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- Project dependencies -->
		<dependency>
			<groupId>com.customer.app</groupId>
			<artifactId>artifacts</artifactId>
			<version>1.0-SNAPSHOT</version>
		</dependency>

    <!-- Karaf microcontainer dependencies -->
    <dependency>
      <!-- scope is compile so all features (there is only one) are installed into startup.properties,
      and the feature repo itself is not added in etc/org.apache.karaf.features.cfg file -->
      <groupId>org.jboss.fuse</groupId>
      <artifactId>fuse-karaf-framework</artifactId>
      <type>kar</type>
      <!-- no need to download kar dependencies -->
      <exclusions>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
		
  </dependencies>

  <build>
	  <resources>
        <resource>
            <directory>src/main/resources</directory>
            <filtering>true</filtering>
        </resource>
    </resources>

		<defaultGoal>install</defaultGoal>

    <plugins>

      <!-- Compiler plugin enforces Java 1.8 compatibility and activates annotation processors -->
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin.version}</version>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
        </configuration>
      </plugin>

			<!-- Need to setup the OSGi meta information here -> to generate the MANIFEST-FILE required by the bundle -->
      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
				<version>${maven-bundle-plugin.version}</version>
        <extensions>true</extensions>
        <configuration>
          <instructions>
            <Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>
            <Bundle-Name>${project.artifactId}</Bundle-Name>
            <Import-Package>
              com.sun.mdm.index.webservice,
              org.xmlsoap.schemas.soap.envelope,
              org.w3._2003._05.soap_envelope,
              *
            </Import-Package>
            <Export-Package />
          </instructions>
        </configuration>
      </plugin>

			<!-- plugin goals have to be executed in order -->
			<!-- 1. install the bundle and features file -->
			<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>${maven-install-plugin.version}</version>
					<executions>
							<execution>
									<id>default-install</id>
									<goals>
											<goal>install</goal>
									</goals>
									<phase>install</phase>
							</execution>
					</executions>
			</plugin>

			<!-- 2. create karaf assembly -->
			<!-- karaf-maven-plugin creates custom microservice distribution -->
			<plugin>
				<groupId>org.jboss.redhat-fuse</groupId>
				<artifactId>karaf-maven-plugin</artifactId>
				<version>${fuse.version}</version>
				<extensions>true</extensions>
				<executions>
					<execution>
						<id>karaf-assembly</id>
						<goals>
							<goal>assembly</goal>
						</goals>
						<phase>install</phase>
					</execution>
					<execution>
						<id>karaf-archive</id>
						<goals>
							<goal>archive</goal>
						</goals>
						<phase>install</phase>
					</execution>
				</executions>
				<configuration>
					<javase>1.8</javase>
					<!--  <karafVersion>v4x</karafVersion>-->
					<framework>framework</framework>
					<useReferenceUrls>true</useReferenceUrls>
					<!-- do not include build output directory -->
					<archiveTarGz>false</archiveTarGz>
					<includeBuildOutputDirectory>false</includeBuildOutputDirectory>
					<!-- no startupFeatures -->
					<startupFeatures>
						<feature>framework</feature>
						<feature>jaas</feature>
						<feature>log</feature>
						<feature>shell</feature>
						<feature>bundle</feature>
						<feature>feature</feature>
						<feature>system</feature>
						<feature>scr</feature>
						<feature>management</feature>
						<feature>configadmin</feature>
						<feature>aries-blueprint</feature>
						<feature>camel-blueprint</feature>
						<feature>camel-spring</feature>
						<feature>camel-jackson</feature>
						<feature>camel-core</feature>
						<feature>camel-jms</feature>
						<feature>activemq-client</feature>
						<feature>camel-activemq</feature>
						<feature>activemq-camel</feature>
						<feature>kubernetes-client</feature>
						<feature>openshift-client</feature>
						<feature>fabric8-karaf-blueprint</feature>
						<feature>fabric8-karaf-checks</feature>
					</startupFeatures>
					<startupBundles>
						<!--<bundle>mvn:com.customer.app/artifacts/1.0-SNAPSHOT</bundle>
						<bundle>mvn:com.customer.app/inbound/1.0-SNAPSHOT</bundle>-->
						<bundle>mvn:${project.groupId}/${project.artifactId}/${project.version};start-level=80</bundle>
					</startupBundles>
				</configuration>
			</plugin>
			
			<!-- 3. create docker image -->
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>fabric8-maven-plugin</artifactId>
				<version>${fabric8.maven.plugin.version}</version>
				<executions>
					<execution>
						<id>generate-resource</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>resource</goal>
						</goals>
					</execution>
					<execution>
						<id>build-image</id>
						<phase>install</phase>
						<goals>
							<goal>build</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
						<generator>
							<config>
								<karaf>
									<webPort>8080</webPort>
								</karaf>
							</config>
						</generator>
					</configuration>
			</plugin>

	  
    </plugins>
  </build>

</project>
